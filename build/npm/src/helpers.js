"use strict";

var _path2 = require("path");

var _pandaGarden = require("panda-garden");

var _pandaParchment = require("panda-parchment");

var _pandaRiver = require("panda-river");

var _pandaQuill = require("panda-quill");

var context, parse, write;

parse = function (path) {
  var dir, ext, name;
  ({
    dir,
    name,
    ext
  } = (0, _path2.parse)(path));
  return {
    path: path,
    directory: dir,
    name: name,
    extension: ext
  };
};

context = (0, _pandaGarden.curry)(function (_directory, _path) {
  var directory, extension, name, path;
  ({
    path,
    directory,
    name,
    extension
  } = parse(_path));
  return {
    path: (0, _path2.relative)(_directory, (0, _path2.join)(directory, name)),
    name: name,
    source: {
      path,
      directory,
      name,
      extension
    },
    target: {},
    data: {}
  };
}); // options exposes the Pug API's compile options.

write = (0, _pandaGarden.curry)((0, _pandaGarden.binary)(async function (directory, {
  path,
  target,
  source
}) {
  var extension;

  if (target.content != null) {
    if (target.path == null) {
      extension = target.extension != null ? target.extension : source.extension != null ? source.extension : "";
      (0, _pandaParchment.include)(target, parse((0, _path2.join)(directory, `${path}${extension}`)));
    }

    await (0, _pandaQuill.mkdirp)("0777", target.directory);
    return await (0, _pandaQuill.write)(target.path, target.content);
  }
}));
module.exports = {
  context,
  write
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhlbHBlcnMuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBSkEsSUFBQSxPQUFBLEVBQUEsS0FBQSxFQUFBLEtBQUE7O0FBTUEsS0FBQSxHQUFRLFVBQUEsSUFBQSxFQUFBO0FBQ04sTUFBQSxHQUFBLEVBQUEsR0FBQSxFQUFBLElBQUE7QUFBQSxHQUFBO0FBQUEsSUFBQSxHQUFBO0FBQUEsSUFBQSxJQUFBO0FBQUEsSUFBQTtBQUFBLE1BQW1CLGtCQUFuQixJQUFtQixDQUFuQjtTQUNBO0FBQUEsSUFBQSxJQUFBLEVBQUEsSUFBQTtBQUNBLElBQUEsU0FBQSxFQURBLEdBQUE7QUFFQSxJQUFBLElBQUEsRUFGQSxJQUFBO0FBR0EsSUFBQSxTQUFBLEVBQVc7QUFIWCxHO0FBRk0sQ0FBUjs7QUFPQSxPQUFBLEdBQVUsd0JBQU0sVUFBQSxVQUFBLEVBQUEsS0FBQSxFQUFBO0FBQ2QsTUFBQSxTQUFBLEVBQUEsU0FBQSxFQUFBLElBQUEsRUFBQSxJQUFBO0FBQUEsR0FBQTtBQUFBLElBQUEsSUFBQTtBQUFBLElBQUEsU0FBQTtBQUFBLElBQUEsSUFBQTtBQUFBLElBQUE7QUFBQSxNQUFxQyxLQUFBLENBQXJDLEtBQXFDLENBQXJDO1NBQ0E7QUFBQSxJQUFBLElBQUEsRUFBTSxxQkFBQSxVQUFBLEVBQXNCLGlCQUFBLFNBQUEsRUFBNUIsSUFBNEIsQ0FBdEIsQ0FBTjtBQUNBLElBQUEsSUFBQSxFQURBLElBQUE7QUFFQSxJQUFBLE1BQUEsRUFBUTtBQUFBLE1BQUEsSUFBQTtBQUFBLE1BQUEsU0FBQTtBQUFBLE1BQUEsSUFBQTtBQUZSLE1BQUE7QUFFUSxLQUZSO0FBR0EsSUFBQSxNQUFBLEVBSEEsRUFBQTtBQUlBLElBQUEsSUFBQSxFQUFNO0FBSk4sRztBQWZGLENBYVUsQ0FBVixDOztBQVNBLEtBQUEsR0FBUSx3QkFBTSx5QkFBTyxnQkFBQSxTQUFBLEVBQVk7QUFBQSxFQUFBLElBQUE7QUFBQSxFQUFBLE1BQUE7QUFBWixFQUFBO0FBQVksQ0FBWixFQUFBO0FBQ25CLE1BQUEsU0FBQTs7QUFBQSxNQUFHLE1BQUEsQ0FBQSxPQUFBLElBQUgsSUFBQSxFQUFBO0FBQ0UsUUFBSSxNQUFBLENBQUEsSUFBQSxJQUFKLElBQUEsRUFBQTtBQUNFLE1BQUEsU0FBQSxHQUFlLE1BQUEsQ0FBQSxTQUFBLElBQUgsSUFBRyxHQUNiLE1BQU0sQ0FESSxTQUFHLEdBRVAsTUFBQSxDQUFBLFNBQUEsSUFBSCxJQUFHLEdBQ04sTUFBTSxDQURILFNBQUcsR0FFSCxFQUpMO0FBS0EsbUNBQUEsTUFBQSxFQUNFLEtBQUEsQ0FBTyxpQkFBQSxTQUFBLEVBQWdCLEdBQUEsSUFBQSxHQUFBLFNBUDNCLEVBT1csQ0FBUCxDQURGOzs7QUFFRixVQUFNLHdCQUFBLE1BQUEsRUFBZ0IsTUFBTSxDQUF0QixTQUFBLENBQU47QUFDQSxXQUFBLE1BQU0sdUJBQU8sTUFBTSxDQUFiLElBQUEsRUFBb0IsTUFBTSxDQVZsQyxPQVVRLENBQU47O0FBWEksQ0FBTSxDQUFOLENBQVI7QUFhQSxNQUFNLENBQU4sT0FBQSxHQUFpQjtBQUFBLEVBQUEsT0FBQTtBQUFBLEVBQUE7QUFBQSxDQUFqQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7cGFyc2UgYXMgX3BhcnNlLCByZWxhdGl2ZSwgam9pbn0gZnJvbSAgXCJwYXRoXCJcbmltcG9ydCB7Y3VycnksIGJpbmFyeX0gZnJvbSBcInBhbmRhLWdhcmRlblwiXG5pbXBvcnQge3Byb21pc2UsIGluY2x1ZGV9IGZyb20gXCJwYW5kYS1wYXJjaG1lbnRcIlxuaW1wb3J0IHtmbG93LCBtYXB9IGZyb20gXCJwYW5kYS1yaXZlclwiXG5pbXBvcnQge2dsb2IsIHJlYWQsIHdyaXRlIGFzIF93cml0ZSwgbWtkaXJwfSBmcm9tIFwicGFuZGEtcXVpbGxcIlxuXG5wYXJzZSA9IChwYXRoKSAtPlxuICB7ZGlyLCBuYW1lLCBleHR9ID0gX3BhcnNlIHBhdGhcbiAgcGF0aDogcGF0aFxuICBkaXJlY3Rvcnk6IGRpclxuICBuYW1lOiBuYW1lXG4gIGV4dGVuc2lvbjogZXh0XG5cbmNvbnRleHQgPSBjdXJyeSAoX2RpcmVjdG9yeSwgX3BhdGgpIC0+XG4gIHtwYXRoLCBkaXJlY3RvcnksIG5hbWUsIGV4dGVuc2lvbn0gPSBwYXJzZSBfcGF0aFxuICBwYXRoOiByZWxhdGl2ZSBfZGlyZWN0b3J5LCAoam9pbiBkaXJlY3RvcnksIG5hbWUpXG4gIG5hbWU6IG5hbWVcbiAgc291cmNlOiB7cGF0aCwgZGlyZWN0b3J5LCBuYW1lLCBleHRlbnNpb259XG4gIHRhcmdldDoge31cbiAgZGF0YToge31cblxuIyBvcHRpb25zIGV4cG9zZXMgdGhlIFB1ZyBBUEkncyBjb21waWxlIG9wdGlvbnMuXG53cml0ZSA9IGN1cnJ5IGJpbmFyeSAoZGlyZWN0b3J5LCB7cGF0aCwgdGFyZ2V0LCBzb3VyY2V9KSAtPlxuICBpZiB0YXJnZXQuY29udGVudD9cbiAgICBpZiAhdGFyZ2V0LnBhdGg/XG4gICAgICBleHRlbnNpb24gPSBpZiB0YXJnZXQuZXh0ZW5zaW9uP1xuICAgICAgICB0YXJnZXQuZXh0ZW5zaW9uXG4gICAgICBlbHNlIGlmIHNvdXJjZS5leHRlbnNpb24/XG4gICAgICAgIHNvdXJjZS5leHRlbnNpb25cbiAgICAgIGVsc2UgXCJcIlxuICAgICAgaW5jbHVkZSB0YXJnZXQsXG4gICAgICAgIHBhcnNlIChqb2luIGRpcmVjdG9yeSwgXCIje3BhdGh9I3tleHRlbnNpb259XCIpXG4gICAgYXdhaXQgbWtkaXJwIFwiMDc3N1wiLCAodGFyZ2V0LmRpcmVjdG9yeSlcbiAgICBhd2FpdCBfd3JpdGUgdGFyZ2V0LnBhdGgsIHRhcmdldC5jb250ZW50XG5cbm1vZHVsZS5leHBvcnRzID0ge2NvbnRleHQsIHdyaXRlfVxuIl0sInNvdXJjZVJvb3QiOiIifQ==
//# sourceURL=helpers.coffee